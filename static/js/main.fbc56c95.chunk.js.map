{"version":3,"sources":["Mobile.js","Pc.js","App.js","reportWebVitals.js","client.js","index.js"],"names":["validateCoupon","gql","addCoupon","Mobile","useState","name","birthday","coupon","inputs","setInputs","useMutation","validate","loading","addcoupon","addloading","handleChange","e","target","value","temp","a","variables","Date","moment","format","toDateString","data","console","log","onClick","length","window","confirm","alert","className","src","alt","onChange","placeholder","href","Pc","App","innerWidth","width","setWidth","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbc56c95.chunk.js","sourcesContent":["import './App.scss';\r\nimport React,{ useState} from 'react';\r\nimport {gql,useMutation} from '@apollo/client'\r\nimport moment from 'moment';\r\nconst validateCoupon = gql` mutation validateCoupon($name:String!,$birthday:DateTime!,$coupon:String!)\r\n{ validateCoupon(name:$name,birthday:$birthday,coupon:$coupon)}` ;\r\nconst addCoupon = gql`mutation addCoupon($name:String!,$birthday:DateTime!,$coupon:String!)\r\n{ addCoupon(name:$name,birthday:$birthday,coupon:$coupon)}` ;\r\nfunction Mobile() {\r\n \r\n\r\n  const [inputs,setInputs] = useState({\r\n    name:\"\",\r\n    birthday:\"\",\r\n    coupon:\"\",\r\n  })\r\n  \r\n  const[validate,{loading}] = useMutation(validateCoupon)\r\n  const[addcoupon,{addloading}] = useMutation(addCoupon)\r\n  const {name,birthday,coupon} = inputs;\r\n  const handleChange= (e)=>{\r\n    const {value,name} = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]:value\r\n    });\r\n  };\r\n\r\n  const temp = async()=>{\r\n   const {data} =await validate({variables:{name,birthday:new Date(moment(birthday).format('YYYY-MM-DD')).toDateString(),coupon}});\r\nconsole.log(data)\r\n   return data\r\n  }\r\n\r\n  const onClick = async()=>{\r\n    if(birthday.length===8&&coupon.length===14){ \r\n      const data = await temp()\r\n\r\n      if(data?.validateCoupon===\"이미 등록된 쿠폰이 있음.\"){\r\n        if(window.confirm(\"쿠폰을 추가로 등록 하시겠습니다?\")){ // 확인시 새로운 mutation > add coupon 날리기 ! \r\n          const {data} =await addcoupon({variables:{name,birthday:new Date(moment(birthday).format('YYYY-MM-DD')).toDateString(),coupon}});\r\n          console.log(data)\r\n          alert(data?.addCoupon)\r\n          setInputs({name:\"\",birthday:\"\",coupon:\"\"})\r\n\r\n        }\r\n        else{\r\n          alert(\"추가 등록을 취소하였습니다.\")\r\n          setInputs({name:\"\",birthday:\"\",coupon:\"\"})\r\n        }\r\n      }\r\n      else{\r\n        alert(data?.validateCoupon)\r\n        setInputs({name:\"\",birthday:\"\",coupon:\"\"})\r\n      }\r\n    }\r\n    else{\r\n      alert(\"쿠폰 또는 생년월일 입력이 잘못 되었습니다.\")\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"AppHeader\"> \r\n      <img src = \"https://roubitdev.s3.ap-northeast-2.amazonaws.com/filepath/roubitSigniture.png\" alt =\"이미지 로드 실패 \"/>\r\n      </div>\r\n      <div className=\"AppBody\"> \r\n      <div className=\"valid_Body\">\r\n        <h1 className = \"Input_description\">쿠폰번호 입력</h1>\r\n        <div className=\"name\"><span className=\"sname\">닉네임</span><input className=\"name_input\" name =\"name\" onChange={handleChange} value={name}/></div>\r\n        <div className=\"birthday\"><span className=\"sbirth\">생년월일</span><input className=\"birthday_input\" name = \"birthday\" onChange={handleChange} value={birthday} placeholder=\"YYYYMMDD\"/></div>\r\n      <div className=\"birthday_description\"><div>*닉네임,생년월일 확인방법: [앱 - 설정탭 - 마이페이지 - 회원정보수정]</div></div>\r\n      <hr></hr>\r\n      </div>mobile\r\n      <div className=\"valid_Coupon\">\r\n        <div className=\"coupon\"><span className=\"scoupon\">쿠폰번호</span> <input className=\"coupon_input\" name =\"coupon\" placeholder=\"AAAA-AAAA-CCCC\" onChange={handleChange} value={coupon}/></div>\r\n        <div className=\"submit_div\"><button className=\"submit_btn\" onClick={onClick}>적용하기</button></div>\r\n      </div>\r\n      <div className=\"attention\">\r\n        <h1>이용권 안내</h1>\r\n        <p className=\"attention-Body\">1. 생년월일이 일치해야 확인 가능합니다.<br></br>\r\n                       생년월일을 회원가입 시 입력하지 않았다면 입력해 주세요. <br></br>\r\n <br></br>\r\n    [앱 - 설정 탭 - 마이페이지 - 회원정보 수정]<br></br>\r\n    <br></br>\r\n2. 이용권 적용이 안되거나 이용 중 문제가 생겼다면 <a href=\"https://open.kakao.com/o/gc3XuKlc\">문의 링크</a>로 문의 부탁드립니다.<br></br>\r\n<br></br>\r\n3. 구글 정기결제, 무료체험 중에는 이용권 적용이 불가능합니다. <br></br>\r\n    정기결제 해제 후 적용해 주세요.<br></br ><br></br>\r\n    ※이 페이지는 모바일 환경에 최적화되어있습니다.</p>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n// const data = await temp()\r\n// alert(data?.validateCoupon)}","import './Pc.scss';\r\nimport React,{ useState} from 'react';\r\nimport {gql,useMutation} from '@apollo/client'\r\nimport moment from 'moment';\r\nconst validateCoupon = gql` mutation validateCoupon($name:String!,$birthday:DateTime!,$coupon:String!)\r\n{ validateCoupon(name:$name,birthday:$birthday,coupon:$coupon)}` ;\r\nconst addCoupon = gql`mutation addCoupon($name:String!,$birthday:DateTime!,$coupon:String!)\r\n{ addCoupon(name:$name,birthday:$birthday,coupon:$coupon)}` ;\r\nfunction Pc() {\r\n \r\n\r\n  const [inputs,setInputs] = useState({\r\n    name:\"\",\r\n    birthday:\"\",\r\n    coupon:\"\",\r\n  })\r\n  \r\n  const[validate,{loading}] = useMutation(validateCoupon)\r\n  const[addcoupon,{addloading}] = useMutation(addCoupon)\r\n  const {name,birthday,coupon} = inputs;\r\n  const handleChange= (e)=>{\r\n    const {value,name} = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]:value\r\n    });\r\n  };\r\n\r\n  const temp = async()=>{\r\n   const {data} =await validate({variables:{name,birthday:new Date(moment(birthday).format('YYYY-MM-DD')).toDateString(),coupon}});\r\nconsole.log(data)\r\n   return data\r\n  }\r\n\r\n  const onClick = async()=>{\r\n    if(birthday.length===8&&coupon.length===14){ \r\n      const data = await temp()\r\n\r\n      if(data?.validateCoupon===\"이미 등록된 쿠폰이 있음.\"){\r\n        if(window.confirm(\"쿠폰을 추가로 등록 하시겠습니다?\")){ // 확인시 새로운 mutation > add coupon 날리기 ! \r\n          const {data} =await addcoupon({variables:{name,birthday:new Date(moment(birthday).format('YYYY-MM-DD')).toDateString(),coupon}});\r\n          console.log(data)\r\n          alert(data?.addCoupon)\r\n          setInputs({name:\"\",birthday:\"\",coupon:\"\"})\r\n\r\n        }\r\n        else{\r\n          alert(\"추가 등록을 취소하였습니다.\")\r\n          setInputs({name:\"\",birthday:\"\",coupon:\"\"})\r\n        }\r\n      }\r\n      else{\r\n        alert(data?.validateCoupon)\r\n        setInputs({name:\"\",birthday:\"\",coupon:\"\"})\r\n      }\r\n    }\r\n    else{\r\n      alert(\"쿠폰 또는 생년월일 입력이 잘못 되었습니다.\")\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"Pc\">\r\n      <div className=\"PcHeader\"> \r\n      <img src = \"https://roubitdev.s3.ap-northeast-2.amazonaws.com/filepath/roubitSigniture.png\" alt =\"이미지 로드 실패 \"/>\r\n      </div>\r\n      <div className=\"PcBody\"> \r\n      <div className=\"valid_Body\">\r\n        <h1 className = \"Input_description\">쿠폰번호 입력</h1>\r\n        <div className=\"name\"><span className=\"sname\">닉네임</span><input className=\"name_input\" name =\"name\" onChange={handleChange} value={name}/></div>\r\n        <div className=\"birthday\"><span className=\"sbirth\">생년월일</span><input className=\"birthday_input\" name = \"birthday\" onChange={handleChange} value={birthday} placeholder=\"YYYYMMDD\"/></div>\r\n      <div className=\"birthday_description\"><div>*닉네임,생년월일 확인방법: [앱 - 설정탭 - 마이페이지 - 회원정보수정]</div></div>\r\n      <hr></hr>\r\n      </div>pc\r\n      <div className=\"valid_Coupon\">\r\n        <div className=\"coupon\"><span className=\"scoupon\">쿠폰번호</span> <input className=\"coupon_input\" name =\"coupon\" placeholder=\"AAAA-AAAA-CCCC\" onChange={handleChange} value={coupon}/></div>\r\n        <div className=\"submit_div\"><button className=\"submit_btn\" onClick={onClick}>적용하기</button></div>\r\n      </div>\r\n      <div className=\"attention\">\r\n        <h1>이용권 안내</h1>\r\n        <p className=\"attention-Body\">1. 생년월일이 일치해야 확인 가능합니다.<br></br>\r\n                       생년월일을 회원가입 시 입력하지 않았다면 입력해 주세요. <br></br>\r\n <br></br>\r\n    [앱 - 설정 탭 - 마이페이지 - 회원정보 수정]<br></br>\r\n    <br></br>\r\n2. 이용권 적용이 안되거나 이용 중 문제가 생겼다면 <a href=\"https://open.kakao.com/o/gc3XuKlc\">문의 링크</a>로 문의 부탁드립니다.<br></br>\r\n<br></br>\r\n3. 구글 정기결제, 무료체험 중에는 이용권 적용이 불가능합니다. <br></br>\r\n    정기결제 해제 후 적용해 주세요.<br></br ></p>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pc;\r\n// const data = await temp()\r\n// alert(data?.validateCoupon)}","import React, {  useEffect, useState } from 'react';\nimport Mobile from './Mobile';\nimport Pc from './Pc';\n\nfunction App() {\n  const [width,setWidth] = useState(window.innerWidth);\n  console.log(width)\n  console.log(window.innerWidth)\n  useEffect(()=>{\n    setWidth(window.innerWidth)\n  },[window.innerWidth])\n  return (\n   <div>\n     {width>=500 ? <Pc></Pc> : <Mobile></Mobile>}\n   </div>  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ApolloClient,InMemoryCache} from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n    uri:\"https://dev.roubitdev.shop/graphql\",\r\n    cache:new InMemoryCache()\r\n});\r\nexport default client","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloProvider } from '@apollo/client';\nimport reportWebVitals from './reportWebVitals';\nimport client from './client';\n\nReactDOM.render(\n  <ApolloProvider client={client}> \n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
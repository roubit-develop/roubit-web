{"version":3,"sources":["App.js","reportWebVitals.js","client.js","index.js"],"names":["validateCoupon","gql","addCoupon","App","useState","name","birthday","coupon","inputs","setInputs","useMutation","validate","loading","addcoupon","addloading","handleChange","e","target","value","temp","a","variables","Date","moment","format","toDateString","data","console","log","onClick","length","window","confirm","alert","className","src","alt","onChange","placeholder","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bbf3851.chunk.js","sourcesContent":["import './App.scss';\nimport React,{ useState} from 'react';\nimport {gql,useMutation} from '@apollo/client'\nimport moment from 'moment';\nconst validateCoupon = gql` mutation validateCoupon($name:String!,$birthday:DateTime!,$coupon:String!)\n{ validateCoupon(name:$name,birthday:$birthday,coupon:$coupon)}` ;\nconst addCoupon = gql`mutation addCoupon($name:String!,$birthday:DateTime!,$coupon:String!)\n{ addCoupon(name:$name,birthday:$birthday,coupon:$coupon)}` ;\nfunction App() {\n \n  const [inputs,setInputs] = useState({\n    name:\"\",\n    birthday:\"\",\n    coupon:\"\",\n  })\n  const[validate,{loading}] = useMutation(validateCoupon)\n  const[addcoupon,{addloading}] = useMutation(addCoupon)\n  const {name,birthday,coupon} = inputs;\n  const handleChange= (e)=>{\n    const {value,name} = e.target;\n    setInputs({\n      ...inputs,\n      [name]:value\n    });\n  };\n\n  const temp = async()=>{\n   const {data} =await validate({variables:{name,birthday:new Date(moment(birthday).format('YYYY-MM-DD')).toDateString(),coupon}});\nconsole.log(data)\n   return data\n  }\n\n  const onClick = async()=>{\n    if(birthday.length===8&&coupon.length===14){ \n      const data = await temp()\n\n      if(data?.validateCoupon===\"이미 등록된 쿠폰이 있음.\"){\n        if(window.confirm(\"쿠폰을 추가로 등록 하시겠습니다?\")){ // 확인시 새로운 mutation > add coupon 날리기 ! \n          const {data} =await addcoupon({variables:{name,birthday:new Date(moment(birthday).format('YYYY-MM-DD')).toDateString(),coupon}});\n          console.log(data)\n          alert(data?.addCoupon)\n          setInputs({name:\"\",birthday:\"\",coupon:\"\"})\n\n        }\n        else{\n          alert(\"추가 등록을 취소하였습니다.\")\n          setInputs({name:\"\",birthday:\"\",coupon:\"\"})\n        }\n      }\n      else{\n        alert(data?.validateCoupon)\n        setInputs({name:\"\",birthday:\"\",coupon:\"\"})\n      }\n    }\n    else{\n      alert(\"쿠폰 또는 생년월일 입력이 잘못 되었습니다.\")\n    }\n\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"AppHeader\"> \n      <img src = \"https://roubitdev.s3.ap-northeast-2.amazonaws.com/filepath/roubitSigniture.png\" alt =\"이미지 로드 실패 \"/>\n      </div>\n      <div className=\"AppBody\"> \n      <div className=\"valid_Body\">\n        <h1 className = \"Input_description\">쿠폰번호 입력</h1>\n        <div className=\"name\"><span className=\"sname\">닉네임</span><input className=\"name_input\" name =\"name\" onChange={handleChange} value={name}/></div>\n        <div className=\"birthday\"><span className=\"sbirth\">생년월일</span><input className=\"birthday_input\" name = \"birthday\" onChange={handleChange} value={birthday} placeholder=\"YYYYMMDD\"/></div>\n      <div className=\"birthday_description\"><div>*닉네임,생년월일 확인방법: [앱 - 설정탭 - 마이페이지 - 회원정보수정]</div></div>\n      <hr></hr>\n      </div>\n      <div className=\"valid_Coupon\">\n        <div className=\"coupon\"><span className=\"scoupon\">쿠폰번호</span> <input className=\"coupon_input\" name =\"coupon\" onChange={handleChange} value={coupon}/></div>\n        <div className=\"submit_div\"><button className=\"submit_btn\" onClick={onClick}>적용하기</button></div>\n      </div>\n      <div className=\"attention\">\n        <h1>이용권 안내</h1>\n        <p className=\"attention-Body\">1. 생년월일이 일치해야 확인 가능합니다.<br></br>\n                       생년월일을 회원가입 시 입력하지 않았다면 입력해 주세요. <br></br>\n <br></br>\n    [앱 - 설정 탭 - 마이페이지 - 회원정보 수정]<br></br>\n    <br></br>\n2. 이용권 적용이 안되거나 이용 중 문제가 생겼다면 <a href=\"https://open.kakao.com/o/gc3XuKlc\">문의 링크</a>로 문의 부탁드립니다.<br></br>\n<br></br>\n3. 구글 정기결제, 무료체험 중에는 이용권 적용이 불가능합니다. <br></br>\n    정기결제 해제 후 적용해 주세요.<br></br ><br></br>\n    ※이 페이지는 모바일 환경에 최적화되어있습니다.</p>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n// const data = await temp()\n// alert(data?.validateCoupon)}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ApolloClient,InMemoryCache} from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n    uri:\"https://dev.roubitdev.shop/graphql\",\r\n    cache:new InMemoryCache()\r\n});\r\nexport default client","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloProvider } from '@apollo/client';\nimport reportWebVitals from './reportWebVitals';\nimport client from './client';\n\nReactDOM.render(\n  <ApolloProvider client={client}> \n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}